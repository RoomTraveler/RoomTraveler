<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.trip.accommodation.dao.AccommodationDao">

    <!-- Accommodation 결과 매핑 -->
    <resultMap id="accommodationResultMap" type="com.ssafy.trip.accommodation.model.Accommodation">
        <id property="accommodationId" column="accommodation_id" />
        <result property="hostId" column="host_id" />
        <result property="title" column="title" />
        <result property="description" column="description" />
        <result property="address" column="address" />
        <result property="sidoCode" column="sido_code" />
        <result property="gugunCode" column="gugun_code" />
        <result property="latitude" column="latitude" />
        <result property="longitude" column="longitude" />
        <result property="accommodationType" column="accommodation_type" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
        <result property="website" column="website" />
        <result property="checkInTime" column="check_in_time" />
        <result property="checkOutTime" column="check_out_time" />
        <result property="amenities" column="amenities" />
        <result property="status" column="status" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

    <!-- 새 숙소를 등록합니다. -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="accommodationId">
        INSERT INTO accommodations (
            host_id, title, description, address, sido_code, gugun_code, 
            latitude, longitude, status, 
            check_in_time, check_out_time, amenities, created_at, updated_at
        )
        VALUES (
            #{hostId}, #{title}, #{description}, #{address}, #{sidoCode}, #{gugunCode}, 
            #{latitude}, #{longitude}, #{status}, 
            #{checkInTime}, #{checkOutTime}, #{amenities}, NOW(), NOW()
        )
    </insert>

    <!-- 숙소 ID로 숙소를 조회합니다. -->
    <select id="getAccommodationById" resultMap="accommodationResultMap">
        SELECT * FROM accommodations WHERE accommodation_id = #{accommodationId}
    </select>

    <!-- 호스트 ID로 숙소 목록을 조회합니다. -->
    <select id="getAccommodationsByHostId" resultMap="accommodationResultMap">
        SELECT * FROM accommodations WHERE host_id = #{hostId}
    </select>

    <!-- 지역 코드로 숙소 목록을 조회합니다. -->
    <select id="getAccommodationsByRegion" resultMap="accommodationResultMap">
        SELECT * FROM accommodations 
        WHERE sido_code = #{sidoCode}
        <if test="gugunCode != null">
            AND gugun_code = #{gugunCode}
        </if>
    </select>

    <!-- 키워드로 숙소를 검색합니다. -->
    <select id="searchAccommodations" resultMap="accommodationResultMap">
        SELECT * FROM accommodations 
        WHERE title LIKE CONCAT('%', #{keyword}, '%')
        OR description LIKE CONCAT('%', #{keyword}, '%')
        OR address LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- 숙소 정보를 업데이트합니다. -->
    <update id="updateAccommodation">
        UPDATE accommodations
        SET 
            title = #{title},
            description = #{description},
            address = #{address},
            sido_code = #{sidoCode},
            gugun_code = #{gugunCode},
            latitude = #{latitude},
            longitude = #{longitude},
            check_in_time = #{checkInTime},
            check_out_time = #{checkOutTime},
            amenities = #{amenities},
            updated_at = NOW()
        WHERE accommodation_id = #{accommodationId}
    </update>

    <!-- 숙소 상태를 업데이트합니다. -->
    <update id="updateAccommodationStatus">
        UPDATE accommodations
        SET status = #{status}, updated_at = NOW()
        WHERE accommodation_id = #{accommodationId}
    </update>

    <!-- 숙소를 삭제합니다. -->
    <delete id="deleteAccommodation">
        DELETE FROM accommodations WHERE accommodation_id = #{accommodationId}
    </delete>

    <!-- 모든 숙소를 삭제합니다. -->
    <delete id="deleteAllAccommodations">
        DELETE FROM accommodations
    </delete>

    <!-- 모든 숙소를 조회합니다. -->
    <select id="getAllAccommodations" resultMap="accommodationResultMap">
        SELECT * FROM accommodations
        WHERE accommodation_id IS NOT NULL
    </select>


    <!-- 필터링된 숙소 목록을 조회합니다. -->
    <select id="getFilteredAccommodations" resultMap="accommodationResultMap">
        SELECT * FROM accommodations
        <where>
            accommodation_id IS NOT NULL
            <if test="sidoCode != null">
                AND sido_code = #{sidoCode}
            </if>
            <if test="gugunCode != null">
                AND gugun_code = #{gugunCode}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <!-- 외부 API에서 가져온 숙소 정보를 저장합니다. -->
    <insert id="insertFromApi" parameterType="com.ssafy.trip.accommodation.model.Accommodation" useGeneratedKeys="true" keyProperty="accommodationId">
        INSERT INTO accommodations (
            host_id, title, description, address, sido_code, gugun_code, 
            latitude, longitude, status, 
            check_in_time, check_out_time, amenities, created_at, updated_at
        )
        VALUES (
            #{hostId}, #{title}, #{description}, #{address}, #{sidoCode}, #{gugunCode}, 
            #{latitude}, #{longitude}, #{status}, 
            #{checkInTime}, #{checkOutTime}, #{amenities}, NOW(), NOW()
        )
    </insert>

    <!-- 유사한 숙소 목록을 조회합니다. -->
    <select id="getSimilarAccommodations" resultMap="accommodationResultMap">
        SELECT a.* FROM accommodations a
        JOIN accommodations base ON a.sido_code = base.sido_code AND a.gugun_code = base.gugun_code
        WHERE base.accommodation_id = #{accommodationId}
        AND a.accommodation_id IS NOT NULL
        AND a.accommodation_id != #{accommodationId}
        AND a.status = 'ACTIVE'
        ORDER BY RAND()
        LIMIT #{limit}
    </select>
</mapper>
